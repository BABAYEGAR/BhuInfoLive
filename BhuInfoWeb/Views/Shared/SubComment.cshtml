@using BhuInfo.Data.Context.DataContext
@using BhuInfo.Data.Factory.BusinessFactory
@using BhuInfo.Data.Objects.Entities
@using BhuInfo.Data.Service.DateTimeHelper
@using BhuInfo.Data.Service.Enums
@model BhuInfo.Data.Objects.Entities.News
@{
    var dbd = new CommentStatusDataContext();
    var newsId = Model.NewsId;
    var newsComments = new NewsCommentFactory().GetNewsComments((int) newsId).OrderByDescending(n => n.DateCreated);
    var enumerable = newsComments as IList<NewsComment> ?? newsComments.ToList();
    var countedNewsComments = enumerable.Take(7);
    var loggedinuser = Session["bhuinfologgedinuser"] as AppUser;
    CommentStatus statusCheckForLike = null;
    CommentStatus statusCheckForDislike = null;
}
@if (TempData["news"] != null)
{
    if (TempData["notificationtype"].Equals(NotificationType.Success.ToString()))
    {
        <p class="alert-success alert-dismissable">@TempData["news"]</p>
    }
    else if (TempData["notificationtype"].Equals(NotificationType.Danger.ToString()))
    {
        <p class="alert-danger alert-dismissable">@TempData["news"]</p>
    }
    else if (TempData["notificationtype"].Equals(NotificationType.Info.ToString()))
    {
        <p class="alert-info alert-dismissable">@TempData["news"]</p>
    }
}
@if (enumerable.Count > 0)

{
    <h4>COMMENTS</h4>
}
<ul>
    @foreach (var item in countedNewsComments)
    {
        if (loggedinuser != null)
        {
            statusCheckForLike = dbd.CommentStatuses.ToList().FirstOrDefault(n => (n.CommentId == item.NewsCommentId) && (n.LoggedInUserId == loggedinuser.AppUserId) && (n.Status == NewsActionType.Like.ToString()));
            statusCheckForDislike = dbd.CommentStatuses.ToList().FirstOrDefault(n => (n.CommentId == item.NewsCommentId) && (n.LoggedInUserId == loggedinuser.AppUserId) && (n.Status == NewsActionType.Dislike.ToString()));
        }
        <li>
            <div class="comments-main">
                <div class="col-md-12">
                    <h5 class="detailsDiv">@item.CommentBy</h5>
                    <p>@item.Comment</p>
                    <div class="cmts">

                        <p style="color: #3498DB">@(new DateTimeCalculator().TimeAgo(item.DateCreated))</p>

                        <div class="clearfix"></div>
                        @if (statusCheckForLike != null)
                        {
                            <label style="color: green">
                                <i class="fa fa-thumbs-up">
                                    @*@Ajax.ActionLink("Like", "LikeOrDislikeANewsComments", "News", new {Id = item.NewsCommentId, actionType = NewsActionType.Like.ToString()}, new AjaxOptions
                            {
                                HttpMethod = "Post",
                                UpdateTargetId = "likeOrDislikeDiv"
                            })*@
                                </i>
                            </label>
                        }
                        else
                        {
                            if (loggedinuser != null)
                            {
                                <label style="color: green">
                                    <i class="fa fa-thumbs-up">
                                        @Ajax.ActionLink("Like", "LikeOrDislikeANewsComments", "News", new {Id = item.NewsCommentId, actionType = NewsActionType.Like.ToString()}, new AjaxOptions
                                        {
                                            HttpMethod = "Post",
                                            UpdateTargetId = "likeOrDislikeDiv"
                                        })
                                    </i>
                                </label>
                            }
                        }

                        <label> </label>
                        @if (statusCheckForDislike != null)
                        {
                            <label style="color: red">
                                <i class="fa fa-thumbs-down">
                                    @*@Ajax.ActionLink("Dislike", "LikeOrDislikeANewsComments", "News", new {Id = item.NewsCommentId, actionType = NewsActionType.Dislike.ToString()}, new AjaxOptions
                            {
                                HttpMethod = "Post",
                                UpdateTargetId = "likeOrDislikeDiv"
                            })*@
                                </i>

                            </label>
                            <br/>
                        }
                        else
                        {
                            if (loggedinuser != null)
                            {
                                <label style="color: red">
                                    <i class="fa fa-thumbs-down">
                                        @Ajax.ActionLink("Dislike", "LikeOrDislikeANewsComments", "News", new {Id = item.NewsCommentId, actionType = NewsActionType.Dislike.ToString()}, new AjaxOptions
                                        {
                                            HttpMethod = "Post",
                                            UpdateTargetId = "likeOrDislikeDiv"
                                        })
                                    </i>

                                </label>
                            }
                            <br/>
                        }
                        <label id="likeOrDislikeDiv">
                            @{
                                // var comment = new NewsCommentFactory().GetSingleNewsComments((int) item.NewsCommentId);
                                var dbc = new NewsComentDataContext();
                                var comment = dbc.NewsComments.Find(item.NewsCommentId);
                                Html.RenderPartial("_LikeOrDislikeCommentPartial", comment);
                            }
                        </label><br/>

                    </div>

                </div>
                <div class="clearfix"></div>
            </div>

        </li>
    }
</ul>