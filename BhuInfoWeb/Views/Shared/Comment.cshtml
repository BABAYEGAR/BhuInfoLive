@using BhuInfo.Data.Context.DataContext
@using BhuInfo.Data.Factory.BusinessFactory
@using BhuInfo.Data.Objects.Entities
@using BhuInfo.Data.Service.DateTimeHelper
@using BhuInfo.Data.Service.Encryption
@using BhuInfo.Data.Service.Enums
@model BhuInfo.Data.Objects.Entities.News
@{
    var dbd = new CommentStatusDataContext();
    var newsId = Model.NewsId;
    var newsComments = new NewsCommentFactory().GetNewsComments((int) newsId).OrderByDescending(n => n.DateCreated);
    var enumerable = newsComments as IList<NewsComment> ?? newsComments.ToList();
    var loggedinuser = Session["bhuinfologgedinuser"] as AppUser;
    CommentStatus statusCheckForLike = null;
    CommentStatus statusCheckForDislike = null;
    var dbc = new NewsComentDataContext();
}
@if (TempData["news"] != null)
{
    if (TempData["notificationtype"].Equals(NotificationType.Success.ToString()))
    {
        <p class="alert-success alert-dismissable" style="height: 30px">@TempData["news"]</p>
    }
    else if (TempData["notificationtype"].Equals(NotificationType.Danger.ToString()))
    {
        <p class="alert-danger alert-dismissable" style="height: 30px">@TempData["news"]</p>
    }
    else if (TempData["notificationtype"].Equals(NotificationType.Info.ToString()))
    {
        <p class="alert-info alert-dismissable" style="height: 30px">@TempData["news"]</p>
    }
}
@if (enumerable.Count > 0)

{
    <h4>COMMENTS</h4>
}

<div id="infinite_scroll">
    @foreach (var item in enumerable)
    {
        var commentBy = new AppUserFactory().GetAppUserById((int) item.AppUserId);
        if (loggedinuser != null)
        {
            statusCheckForLike = dbd.CommentStatuses.ToList().FirstOrDefault(n => (n.CommentId == item.NewsCommentId) && (n.LoggedInUserId == loggedinuser.AppUserId) && (n.Status == NewsActionType.Like.ToString()));
            statusCheckForDislike = dbd.CommentStatuses.ToList().FirstOrDefault(n => (n.CommentId == item.NewsCommentId) && (n.LoggedInUserId == loggedinuser.AppUserId) && (n.Status == NewsActionType.Dislike.ToString()));
        }

        <div id="refresh">
            <div class="comments-main">
                <div class="col-md-3 cmts-main-left">
                    @if (commentBy != null)
                    {
                        if (loggedinuser != null)
                        {
                            <a href="@Url.Action("ProfileDetails", "Account", new {Id = new Md5Ecryption().EncryptPrimaryKey(commentBy.AppUserId.ToString(), true)})">
                                <img src="../../UploadedFiles/ProfileImage/@commentBy.AppUserImage" class="img-responsive" alt="">
                            </a>
                        }
                        else
                        {
                            <a>
                                <img src="../../UploadedFiles/ProfileImage/@commentBy.AppUserImage" class="img-responsive" alt="">
                            </a>
                        }
                    }
                    else
                    {
                        <img src="../../AppTheme/images/avatar.jpg" alt="">
                    }
                </div>

                <div class="col-md-9 cmts-main-right">
                    <h5 class="detailsDiv">
                        @if (commentBy != null)
                        {
                            @commentBy.DisplayName
                        }
                    </h5>
                    <p>@item.Comment</p>
                    <div class="cmts">

                        <p style="color: #3498DB">@(new DateTimeCalculator().TimeAgo(item.DateCreated))</p>

                        <div class="clearfix"></div>
                        @if (statusCheckForLike != null)
                        {
                            <label style="color: green">
                                <i class="fa fa-thumbs-up">
                                </i>
                            </label>
                        }
                        else
                        {
                            if (loggedinuser != null)
                            {
                                <label style="color: green">
                                    <i class="fa fa-thumbs-up">
                                        @Ajax.ActionLink("Like", "LikeOrDislikeANewsComments", "News", new {Id = item.NewsCommentId, actionType = NewsActionType.Like.ToString()}, new AjaxOptions
                                   {
                                       HttpMethod = "Post",
                                       UpdateTargetId = "likeOrDislikeDiv"
                                   },new {id = "like"})
                                    </i>
                                </label>
                            }
                        }

                        <label> </label>
                        @if (statusCheckForDislike != null)
                        {
                            <label style="color: red">
                                <i class="fa fa-thumbs-down">
                                </i>

                            </label>
                          
                        }
                        else
                        {
                            if (loggedinuser != null)
                            {
                                <label style="color: red">
                                    <i class="fa fa-thumbs-down" >
                                        @Ajax.ActionLink("Dislike", "LikeOrDislikeANewsComments", "News", new {Id = item.NewsCommentId, actionType = NewsActionType.Dislike.ToString()}, new AjaxOptions
                                   {
                                       HttpMethod = "Post",
                                       UpdateTargetId = "likeOrDislikeDiv"
                                   },new {id = "dislike" })
                                    </i>

                                </label>
                             
                            }
                        }
                        @if (loggedinuser != null && loggedinuser.AppUserId == dbc.NewsComments.Find(item.NewsCommentId).AppUserId)
                        {
                            <label style="color: red">
                                <i class="fa fa-recycle">
                                    @Ajax.ActionLink("Delete", "DeleteNewsComment", "News", new {newsCommentId = item.NewsCommentId }, new AjaxOptions
                               {
                                   HttpMethod = "Post",
                                   UpdateTargetId = "commentDiv"

                               })
                                </i>

                            </label>
                           
                        }
                        <br />
                        <label id="likeOrDislikeDiv">
                            @{
                                var comment = dbc.NewsComments.Find(item.NewsCommentId);
                                Html.RenderPartial("_LikeOrDislikeCommentPartial", comment);
                            }
                        </label>
                    </div>
                </div>
                <div class="clearfix"></div>
            </div>
        </div>
    }
</div>