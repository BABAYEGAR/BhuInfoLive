@using BhuInfo.Data.Factory.BusinessFactory
@using BhuInfo.Data.Objects.Entities
@using BhuInfo.Data.Service.DateTimeHelper
@using BhuInfo.Data.Service.Encryption
@using BhuInfo.Data.Service.Enums
@using BhuInfo.Data.Service.TextFormatter
@model BhuInfo.Data.Objects.Entities.SchoolDiscussion
@{
    var discussionId = Model.SchoolDiscussionId;

    var discussionComments = new DiscussionCommentFactory().GetDiscussionComments((int) discussionId);
    var schoolDiscussionComments = discussionComments as IList<SchoolDiscussionComment> ?? discussionComments.ToList();

    var loggedinuser = Session["bhuinfologgedinuser"] as AppUser;

    var postedBy = new AppUserFactory().GetAppUserById(1);
}

@{
    ViewBag.Title = "Activity";
}

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    ul > li {
        /*display: none;*/
        list-style-type: none;
    }

/*ul#lazy-container {
        height: 800px;
        overflow: auto;
    }*/
</style>
<header class="@ViewBag.HeaderClass">
    <div class="overlay"></div>
    <div class="container">
        <div class="row">
            @if ((loggedinuser != null) && (loggedinuser.Role.Equals(UserType.Administrator.ToString()) || loggedinuser.Role.Equals(UserType.Manager.ToString())))
            {
                if (Model.Status == DiscussionState.Open.ToString())
                {
                    <div class="col-lg-12">
                        <a href="@Url.Action("CloseActivity", "SchoolDiscussions", new {Id = new Md5Ecryption().EncryptPrimaryKey(Model.SchoolDiscussionId.ToString(), true)})" class="btn btn-danger">Close Discussion</a>
                    </div>
                }
                else
                {
                    <div class="col-lg-12">

                    </div>
                }
            }
            else
            {
                <div class="col-lg-12">

                </div>
            }
        </div>
    </div>
</header>

<div class="container">
    <div class="content">
        <div class="single-page">
            <div class="print-main">
                <h3>@Html.DisplayFor(model => model.Topic)</h3>
                <p class="sub_head">
                    Posted by <a href="#" style="font-weight: bold">@postedBy.DisplayName</a> @(new DateTimeCalculator().TimeAgo(Model.DateCreated))
                </p>
                <a href="#">
                    <p>
                        <p>@(new RemoveCharacters().RemoveSpecialCharacters(Model.Content))</p>
                    </p>
                </a>
            </div>

        </div>
        <div class="col-md-7 single-content-center">
            <div class="col-md-12">
                @if (TempData["activity"] != null)
                {
                    if (TempData["notificationtype"].Equals(NotificationType.Success.ToString()))
                    {
                        <p class="alert-success alert-dismissable" style="height: 30px">@TempData["activity"]</p>
                    }
                    else if (TempData["notificationtype"].Equals(NotificationType.Danger.ToString()))
                    {
                        <p class="alert-danger alert-dismissable" style="height: 30px">@TempData["activity"]</p>
                    }
                    else if (TempData["notificationtype"].Equals(NotificationType.Info.ToString()))
                    {
                        <p class="alert-info alert-dismissable" style="height: 30px">@TempData["activity"]</p>
                    }
                }

                @if (Model.Status == DiscussionState.Open.ToString())
                {
                    if (loggedinuser != null)
                    {
                        <div class="leave">
                            <h4>Leave a comment</h4>
                        </div>
                        <div>
                            @using (Ajax.BeginForm("CreateDiscussionComment", "SchoolDiscussions",
                                new AjaxOptions
                                {
                                    HttpMethod = "Post",
                                    UpdateTargetId = "commentDiv"
                                }))
                            {
                                @Html.AntiForgeryToken()
                                @Html.ValidationSummary(true, "", new {@class = "text-danger"})
                                @Html.Hidden("DiscussionId", Model.SchoolDiscussionId)
                                <div class="form-group col-md-12">
                                    @Html.Label("Comment", null, new {@class = "control-label"})
                                    @Html.TextArea("Comment", null, new {@class = "form-control", id = "commentText"})
                                    @Html.ValidationMessage("Comment", "", new {@class = "text-danger"})

                                </div>

                                <div class="col-md-12">
                                    @*<a href="@Url.Action("Index", "SchoolDiscussions")" class="btn btn-default btn-sm pull-left">Back</a>*@
                                    <input type="submit" value="submit" id="submitComment" class="btn btn-primary btn-sm pull-right"/>

                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        Session["activitymodel"] = Model;
                        <label>Please <a href="@Url.Action("Login", "Account", new {Id = Model.SchoolDiscussionId})" style="color: blue"> Sign In</a> to post your comment on this article</label>
                    }
                }
                else
                {
                    <p class="alert alert-info">This Discussion forum has been closed</p>
                }


                <div class="comments1" id="commentDiv">

                    @{
                        Html.RenderPartial("_ActivityComments", Model);
                    }
                </div>

            </div>
        </div>
        <div class="clearfix"></div>
    </div>
</div>
@section Scripts
{
    <!-- cdnjs -->
    @*<script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/jquery.lazy/1.7.3/jquery.lazy.min.js"></script>
    <script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/jquery.lazy/1.7.3/jquery.lazy.plugins.min.js"></script>*@
    <script type="text/javascript">
        $(function() {
            setInterval(function() {
                    $('#commentDiv')
                        .load('@Url.Action("GetCompleteDiscussionComments", "SchoolDiscussions", new {Id = new Md5Ecryption().EncryptPrimaryKey(Model.SchoolDiscussionId.ToString(), true)})');
                },
                2000);
        });
        $('#submitComment')
            .click(function() {
                $(function() {
                    setInterval(function() {
                            $('#commentDiv')
                                .load('@Url.Action("GetCompleteDiscussionComments", "SchoolDiscussions", new {Id = new Md5Ecryption().EncryptPrimaryKey(Model.SchoolDiscussionId.ToString(), true)})');
                        },
                        3000);
                    $('#commentText').val('');

                });

            });
    </script>
}