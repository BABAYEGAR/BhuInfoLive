@using BhuInfo.Data.Factory.BusinessFactory
@using BhuInfo.Data.Objects.Entities
@using BhuInfo.Data.Service.DateTimeHelper
@using BhuInfo.Data.Service.Encryption
@using BhuInfo.Data.Service.Enums
@using BhuInfo.Data.Service.TextFormatter
@model IEnumerable<BhuInfo.Data.Objects.Entities.News>
@{
    ViewBag.Title = "Home";
    var newsList = new NewsDataFactory().GetTopNthPopularNews(2);
    var popular = newsList as IList<News> ?? newsList.ToList();
    Session["newsmodel"] = null;

    var list = new NewsDataFactory().GetLatestNewsByCategory(NewsCategoryEnum.Announcement, 4);
    var annoucements = list.ToList();

    var generalList = new NewsDataFactory().GetLatestNewsByCategory(NewsCategoryEnum.General, 1);
    var generalNews = generalList.ToList();

    var sportList = new NewsDataFactory().GetLatestNewsByCategory(NewsCategoryEnum.Sports, 1);
    var sportNews = sportList.ToList();

    var fashionList = new NewsDataFactory().GetLatestNewsByCategory(NewsCategoryEnum.Fashion, 1);
    var fashionNews = fashionList.ToList();

    var fullFrameAdvert = new AdvertsiementFactory().GetAdvertByType(AdvertType.FullFrameAdvert.ToString());
    var halfFrameAdvert = new AdvertsiementFactory().GetAdvertByType(AdvertType.BasicFrameAdvert.ToString());

    var recentNews = Model.Take(4);
}
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="container">
<div class="content">
<div class="col-md-7 content-left">
    @try
    {
        <div class="article">

            @if (Model != null)
            {
                <div class="article">
                    <h5 class="head">Recent News By Category</h5>
                    @foreach (var item in generalNews)
                    {
                        <h6>@item.NewsCategory.Name </h6>
                        <a class="title" href="@Url.Action("ViewNewsDetails", "Home", new {Id = new Md5Ecryption().EncryptPrimaryKey(item.NewsId.ToString(), true)})">@item.Title </a>
                        <a href="@Url.Action("ViewNewsDetails", "Home", new {Id = new Md5Ecryption().EncryptPrimaryKey(item.NewsId.ToString(), true)})">
                            <img src="~/UploadedFiles/@UploadType.NewsImage/@item.Image" alt=""/>
                        </a>
                        <div>
                            <p style="text-align: justify">
                                @if (item.Content.Length > 50)
                                {
                                    <p>@(new RemoveCharacters().RemoveSpecialCharacters(item.Content).Substring(0, 80) + "...")</p>
                                }
                                else
                                {
                                    <p>@(new RemoveCharacters().RemoveSpecialCharacters(item.Content))</p>
                                }

                            </p>
                        </div>
                    }
                </div>
            }
        </div>
        <div class="article">
            @if (Model != null)
            {
                <div class="article">
                    <h5 class="head">Recent News By Category</h5>
                    @foreach (var item in fashionNews)
                    {
                        <h6>@item.NewsCategory.Name </h6>
                        <a class="title" href="@Url.Action("ViewNewsDetails", "Home", new {Id = new Md5Ecryption().EncryptPrimaryKey(item.NewsId.ToString(), true)})">@item.Title </a>
                        <a href="@Url.Action("ViewNewsDetails", "Home", new {Id = new Md5Ecryption().EncryptPrimaryKey(item.NewsId.ToString(), true)})">
                            <img src="~/UploadedFiles/@UploadType.NewsImage/@item.Image" alt=""/>
                        </a>
                        <div>
                            <p style="text-align: justify">
                                @if (item.Content.Length > 50)
                                {
                                    <p>@(new RemoveCharacters().RemoveSpecialCharacters(item.Content).Substring(0, 80) + "...")</p>
                                }
                                else
                                {
                                    <p>@(new RemoveCharacters().RemoveSpecialCharacters(item.Content))</p>
                                }

                            </p>
                        </div>
                    }
                </div>
            }
        </div>
    }
    catch (ArgumentOutOfRangeException)
    {
    }
    <div class="article">
        @if (Model != null)
            {
            <div class="article">
                <h5 class="head"></h5>
                @foreach (var item in fashionNews)
                {
                    <h6>@item.NewsCategory.Name </h6>
                        <a class="title" href="@Url.Action("ViewNewsDetails", "Home", new {Id = new Md5Ecryption().EncryptPrimaryKey(item.NewsId.ToString(), true)})">@item.Title </a>
                        <a href="@Url.Action("ViewNewsDetails", "Home", new {Id = new Md5Ecryption().EncryptPrimaryKey(item.NewsId.ToString(), true)})">
                            <img src="~/UploadedFiles/@UploadType.NewsImage/@item.Image" alt="" />
                        </a>
                        <div>
                            <p style="text-align: justify">
                                @if (item.Content.Length > 50)
                                {
                                <p>@(new RemoveCharacters().RemoveSpecialCharacters(item.Content).Substring(0, 80) + "...")</p>
                                }
                                else
                                {
                                    <p>@(new RemoveCharacters().RemoveSpecialCharacters(item.Content))</p>
                                }

                                </p>
                            </div>
                }
            </div>
        }
    </div>

</div>

<div class="col-md-5 content-right">
    <div class="content-right-top">
        @try
        {
            <h5 class="head">Anouncements</h5>
            foreach (var item in annoucements)
            {
                <a href="@Url.Action("ViewNewsDetails", "Home", new {Id = new Md5Ecryption().EncryptPrimaryKey(item.NewsId.ToString(), true)})">
                    <div class="editor text-center">
                        @if (Model != null)
                        {
                            <h3>@item.Title</h3>
                            if (item.Content.Length > 50)
                            {
                                <p style="font-family: verdana">@(new RemoveCharacters().RemoveSpecialCharacters((new RemoveCharacters().RemoveSpecialCharacters(item.Content).Substring(0, 80) + "...")))</p>
                            }
                            else
                            {
                                <p style="font-family: verdana">@(new RemoveCharacters().RemoveSpecialCharacters(item.Content))</p>
                            }
                            <label style="font-weight: bold">
                                @(new DateTimeCalculator().TimeAgo(item.DateCreated))
                            </label>
                            <br/>
                            <label style="color: black"> @(new DateTimeCalculator().CommentAndViews(item)) </label>
                            <br/>
                            if ((item.Likes > 1) && (item.Dislikes > 1))
                            {
                                <label>
                                    <label style="color: green">@item.Likes Likes</label> <label style="color: red">@item.Dislikes Dislikes</label>
                                </label>
                            }
                            if ((item.Likes <= 1) && (item.Dislikes <= 1))
                            {
                                <label>
                                    <label style="color: green">@item.Likes Like</label> <label style="color: red">@item.Dislikes Dislike</label>
                                </label>
                            }
                            if ((item.Likes <= 1) && (item.Dislikes > 1))
                            {
                                <label>
                                    <label style="color: green">@item.Likes Like</label> <label style="color: red">@item.Dislikes Dislikes</label>
                                </label>
                            }
                            if ((item.Likes > 1) && (item.Dislikes <= 1))
                            {
                                <label>
                                    <label style="color: green">@item.Likes Likes</label> <label style="color: red">@item.Dislikes Dislike</label>
                                </label>
                            }
                            <br/>
                            <span></span>
                        }
                    </div>
                </a>
            }
        }
        catch (ArgumentOutOfRangeException)
        {
        }
    </div>
    <div class="editors-pic-grids">
        @try
        {
            <h5>Recent News</h5>
            if (Model != null)
            {
                foreach (var item in recentNews)
                {
                    <div class="editors-pic">
                        <div class="e-pic">
                            <a href="@Url.Action("ViewNewsDetails", "Home", new {Id = new Md5Ecryption().EncryptPrimaryKey(item.NewsId.ToString(), true)})">
                                <img src="~/UploadedFiles/@UploadType.NewsImage/@item.Image" alt=""/>
                            </a>
                        </div>
                        <div class="e-pic-info">
                            <a href="@Url.Action("ViewNewsDetails", "Home", new {Id = new Md5Ecryption().EncryptPrimaryKey(item.NewsId.ToString(), true)})">@item.Title</a>
                            <span></span>
                            <label style="font-weight: bold">
                                @(new DateTimeCalculator().TimeAgo(item.DateCreated))
                            </label><br/>
                            <label style="color: black"> @(new DateTimeCalculator().CommentAndViews(item)) </label>
                            <br/>
                            @if ((item.Likes > 1) && (item.Dislikes > 1))
                            {
                                <label>
                                    <label style="color: green">@item.Likes Likes</label> <label style="color: red">@item.Dislikes Dislikes</label>
                                </label>
                            }
                            @if ((item.Likes <= 1) && (item.Dislikes <= 1))
                            {
                                <label>
                                    <label style="color: green">@item.Likes Like</label> <label style="color: red">@item.Dislikes Dislike</label>
                                </label>
                            }
                            @if ((item.Likes <= 1) && (item.Dislikes > 1))
                            {
                                <label>
                                    <label style="color: green">@item.Likes Like</label> <label style="color: red">@item.Dislikes Dislikes</label>
                                </label>
                            }
                            @if ((item.Likes > 1) && (item.Dislikes <= 1))
                            {
                                <label>
                                    <label style="color: green">@item.Likes Likes</label> <label style="color: red">@item.Dislikes Dislike</label>
                                </label>
                            }
                            <br/>
                        </div>
                        <div class="clearfix"></div>
                    </div>
                }
            }
        }
        catch (ArgumentOutOfRangeException)
        {
        }
    </div>
</div>
<div class="clearfix"></div>
@if ((fullFrameAdvert.StartDate < DateTime.Now) && (fullFrameAdvert.EndDate > DateTime.Now))
{
    if (fullFrameAdvert.AdvertImage != null)
    {
        <div class="features img-responsive" style="background: url('UploadedFiles/Advert/@fullFrameAdvert.AdvertImage') no-repeat 0 0;">
            <h5>@fullFrameAdvert.AdvertCompanyName</h5>
            <h2>@fullFrameAdvert.Title</h2>
        </div>
    }
    else
    {
        <div class="features img-responsive" style="background: url('UploadedFiles/NewsImage/131176526274722376.jpg') no-repeat 0 0;">
            <h5>@fullFrameAdvert.AdvertCompanyName</h5>
            <h2>@fullFrameAdvert.Title</h2>
        </div>
    }
}
else
{
    <div class="features" style="background: url('UploadedFiles/NewsImage/131176526274722376.jpg') no-repeat 0 0;">
        <h5>BHU</h5>
        <h2>Welcome To Bingham University...</h2>
    </div>
}

@try
{
    <div class="col-md-7 content-left">
        <div class="article">
            <h5 class="head">Recent News By Category</h5>
            @foreach (var item in sportNews)
            {
                <h6>@item.NewsCategory.Name </h6>
                <a class="title" href="@Url.Action("ViewNewsDetails", "Home", new {Id = new Md5Ecryption().EncryptPrimaryKey(item.NewsId.ToString(), true)})">@item.Title </a>
                <a href="@Url.Action("ViewNewsDetails", "Home", new {Id = new Md5Ecryption().EncryptPrimaryKey(item.NewsId.ToString(), true)})">
                    <img src="~/UploadedFiles/@UploadType.NewsImage/@item.Image" alt=""/>
                </a>
                if (item.Content.Length > 50)
                {
                    <p>@(new RemoveCharacters().RemoveSpecialCharacters(item.Content).Substring(0, 80) + "...")</p>
                }
                else
                {
                    <p>@(new RemoveCharacters().RemoveSpecialCharacters(item.Content))</p>
                }
            }
        </div>
    </div>
}
catch (ArgumentOutOfRangeException)
{
}
<div class="col-md-5 content-right content-right-top">
    @try
    {
        <h5 class="head">Popular</h5>
        foreach (var item in popular)
        {
            <a href="@Url.Action("ViewNewsDetails", "Home", new {Id = new Md5Ecryption().EncryptPrimaryKey(item.NewsId.ToString(), true)})">
                <div class="editor text-center">
                    <h3>@item.Title</h3>
                    @if (item.Content.Length > 40)
                    {
                        <p style="font-family: verdana">@(new RemoveCharacters().RemoveSpecialCharacters(item.Content).Substring(0, 80) + "...")</p>
                    }
                    else
                    {
                        <p style="font-family: verdana">@(new RemoveCharacters().RemoveSpecialCharacters(item.Content))</p>
                    }
                    <label style="font-weight: bold">
                        @(new DateTimeCalculator().TimeAgo(item.DateCreated))
                    </label>
                    <br/>
                    <label style="color: black"> @(new DateTimeCalculator().CommentAndViews(item)) </label>
                    <br/>
                    @if ((item.Likes > 1) && (item.Dislikes > 1))
                    {
                        <label>
                            <label style="color: green">@item.Likes Likes</label> <label style="color: red">@item.Dislikes Dislikes</label>
                        </label>
                    }
                    @if ((item.Likes <= 1) && (item.Dislikes <= 1))
                    {
                        <label>
                            <label style="color: green">@item.Likes Like</label> <label style="color: red">@item.Dislikes Dislike</label>
                        </label>
                    }
                    @if ((item.Likes <= 1) && (item.Dislikes > 1))
                    {
                        <label>
                            <label style="color: green">@item.Likes Like</label> <label style="color: red">@item.Dislikes Dislikes</label>
                        </label>
                    }
                    @if ((item.Likes > 1) && (item.Dislikes <= 1))
                    {
                        <label>
                            <label style="color: green">@item.Likes Likes</label> <label style="color: red">@item.Dislikes Dislike</label>
                        </label>
                    }
                    <br/>
                    <span></span>
                </div>
            </a>
        }
    }
    catch (ArgumentOutOfRangeException)
    {
    }
</div>
<div class="clearfix"></div>
</div>
</div>